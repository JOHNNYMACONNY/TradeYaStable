#!/usr/bin/env node

/**
 * Phase 1 TODO System - Executable Shim
 *
 * Attempts (in order):
 *  1. Use ts-node to execute TypeScript sources directly (dev workflow)
 *  2. Fallback to built JS in dist/ (prod workflow)
 *
 * Exit codes mirror CLI:
 *  0 success, 2 domain error, 1 unexpected/tooling issue.
 *
 * TODO (Phase >1):
 *  - Add snapshot/export command wiring when implemented.
 *  - Add telemetry / metrics periodic hooks.
 */

async function run() {
  let runCli;

  // Try ts-node path first for developer convenience
  try {
    // Dynamically register ts-node if available
    // eslint-disable-next-line global-require, import/no-extraneous-dependencies
    require('ts-node/register');
    // eslint-disable-next-line global-require
    ({ runTodoCli: runCli } = require('../src/todo/cli'));
  } catch {
    // ts-node not available; fall back to compiled output
    try {
      // eslint-disable-next-line global-require, import/no-unresolved
      ({ runTodoCli: runCli } = require('../dist/todo/cli.js'));
    } catch (err2) {
      console.error(
        'Failed to locate CLI implementation. Install dev dependency "ts-node" or build project to dist/.',
      );
      // eslint-disable-next-line no-process-exit
      process.exit(1);
    }
  }

  try {
    const code = await runCli(process.argv);
    // eslint-disable-next-line no-process-exit
    process.exit(code);
  } catch (err) {
    console.error('Unexpected CLI execution error:', err);
    // eslint-disable-next-line no-process-exit
    process.exit(1);
  }
}

run();